// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  name       String
  email      String    @unique
  password   String
  role       role      @default(Patient)
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?
  drug Drug[]
}

enum role {
  General_Admin
  Clinic_Admin
  Profissional
  Patient
}

model Clinic {
  id         Int      @id @default(autoincrement())
  name       String
  address    String
  phone      String
  email      String   @unique
  created_at DateTime @default(now())
}
model Drug{
id Int @id @default(autoincrement())
user User @relation(fields: [user_id],references: [id])
user_id Int 
name String @unique
date_start DateTime @default(now())
date_end DateTime
observation String
time_Drug Time_Drug[]
dose Dose[]
}

model Time_Drug{
  id Int @id @default(autoincrement())
  drug Drug @relation(fields: [drug_id],references: [id], onDelete: Cascade)
  drug_id Int
  time DateTime @db.Time()
}

model Dose{
  id Int @id @default(autoincrement())
  drog Drug @relation(fields: [drug_id],references: [id],onDelete: Cascade)
  drug_id Int
  date DateTime @db.Date
  time DateTime @db.Time()
  status Status_Dose @default(Pending)
}
enum Status_Dose {
Take
Pending
Forgotten
}
